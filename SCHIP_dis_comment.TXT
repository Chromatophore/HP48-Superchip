00000  GOSBVL  0679B
00007  GOSBVL  08ABF
0000E  LC      021C6
00015  GOSBVL  05B7D
0001C  AD0EX
0001F  R4=A L  A
00025  LC      001C6
0002C  A=A+C   A
0002E  R2=A L  A
00034  C=R4 L  A
0003A  D0=C
0003D  C=0     W
00040  DAT0=C  W
00044  D0=D0+  16
00047  DAT0=C  W
0004B  D0=D0+  16
0004E  LC      40010000
00058  DAT0=C  8
0005C  A=R4 C  A
00062  LC      00071
00069  C=C+A   A
0006B  D0=C
0006E  LC      7055B
00075  LA      38
0007C  GOSUB   001DD
00080  LC      70551
00087  LA      08
0008E  GOSUB   001DD
00092  GOSBVL  067D2
00099  A=R2 L  A
0009F  LC      00400
000A6  C=C+A   A
000A8  D0=C
000AB  C=DAT1  A
000AE  D1=C
000B1  A=DAT1  A
000B4  LC      02A2C
000BB  ?A#C    A
000BE  GOYES   000D8
000C0  D1=D1+  5
000C3  A=DAT1  A
000C6  A=A-5   A
000CC  LC      01C00 				# This is the loading code
000D3  ?C>A    A
000D6  GOYES   000E9
000D8  LC      FFFFF
000DF  R3=C    A
000E5  GOTO    00724
000E9  D1=D1+  5
000EC  GOSUB   00211
000F0  GOSBVL  067D2
000F7  D1=D1+  5
000FA  D=D+1   A
000FC  GOSBVL  0679B
00103  C=R2 L  A
00109  D0=C
0010C  A=PC
00110  LC      00E89
00117  C=C+A   A
00119  D1=C
0011C  LA      50
00123  C=DAT1  1
00127  CSL     A
00129  D1=D1+  1
0012C  DAT0=C  2
00130  D0=D0+  2
00133  A=A-1   A
00135  ?A#0    B
00138  GOYES   00123
0013A  A=PC
0013E  LC      00EAB
00145  C=C+A   A
00147  D1=C
0014A  LA      28
00151  C=DAT1  A
00154  DAT0=C  A
00157  D0=D0+  5
0015A  D1=D1+  5
0015D  A=A-1   A
0015F  ?A#0    B
00162  GOYES   00151
00164  ST=0    15
00167  INTOFF
0016B  C=0     A
0016D  R0=C
00170  LC      200
00175  R3=C    A
0017B  A=R4    A
00181  LC      00028
00188  C=C+A   A
0018A  D0=C
0018D  C=0     A
0018F  DAT0=C  A
00192  D0=D0+  4
00195  DAT0=C  A
00198  LC      001C5
0019F  C=C+A   A
001A1  D0=C
001A4  C=0     A
001A6  DAT0=C  P
001AA  GOSUB   00459
001AE  C=0     A
001B0  LC      138
001B5  D0=C
001B8  C=DAT0  A
001BB  A=C     A
001BD  C=DAT0  A
001C0  ?A#C    A
001C3  GOYES   001BB
001C5  LA      00F80
001CF  C=C&A   A
001D3  R1=A    A
001D9  GOTO    0066D
001DD  D1=C
001E0  C=DAT1  A
001E3  C=C+16  A
001E9  C=C+4   A
001EF  DAT0=C  A
001F2  C=C+16  A
001F8  C=C+16  A
001FE  C=C+2   A
00204  D0=D0+  5
00207  A=A-1   B
0020A  ?A#0    B
0020D  GOYES   001EF
0020F  RTN
00211  ?A=0    A
00214  GOYES   0022A
00216  C=DAT1  1
0021A  DAT0=C  1
0021E  D0=D0+  1
00221  D1=D1+  1
00224  A=A-1   A
00226  GOTO    00211
0022A  RTN
0022C  C=0     A
0022E  LC      22
00232  A=R4 +  A
00238  C=C+A   A
0023A  D0=C
0023D  C=DAT0  B
00240  ?C=0    B
00243  GOYES   0026C
00245  D0=D0+  2
00248  C=DAT0  P
0024C  ?C=0    P
0024F  GOYES   0026C
00251  D0=D0+  1
00254  C=DAT0  3
00258  OUT=C
0025B  A=C     A
0025D  A=-A-1  A
0025F  LC      C00
00264  C=C&A   X
00268  DAT0=C  3
0026C  D0=     00138
00273  A=DAT0  A
00276  LC      00F80
0027D  C=C&A   A
00281  A=R1
00284  ?A#C    A
00287  GOYES   0028B
00289  RTNCC
0028B  C=0     A
0028D  LC      80
00291  A=A-C   A
00293  LC      00F80
0029A  A=A&C   A
0029E  R1=A    A
002A4  GOSUB   00374
002A8  C=DAT0  B
002AB  ?C=0    B
002AE  GOYES   002B6
002B0  C=C-1   B
002B3  DAT0=C  B
002B6  D0=D0+  2
002B9  C=DAT0  B
002BC  ?C=0    B
002BF  GOYES   002C7
002C1  C=C-1   B
002C4  DAT0=C  B
002C7  A=R4    A
002CD  LC      00028
002D4  A=A+C   A
002D6  D0=A
002D9  LC      010
002DE  OUT=C
002E1  GOSBVL  01160
002E8  A=C     A
002EA  C=0     A
002EC  OUT=C
002EF  C=DAT0  4
002F3  DAT0=A  4
002F7  A=-A-1  A
002F9  A=A&C   A
002FD  ?ABIT=1 4
00302  RTNYES
00304  ?ABIT=1 0
00309  RTNYES
0030B  ?ABIT=1 3
00310  GOYES   00317
00312  LC      1
00315  RTNCC
00317  GOSUB   00388
0031B  C=DAT0  P
0031F  C=-C-1  A
00321  LA      1
00327  C=C&A   A
0032B  DAT0=C  P
0032F  GOTO    00312
00333  C=0     A 				# nnnc?
00337  C=DAT1  P 
0033D  D1=D1+  2
00340  C=DAT1  B
00343  D1=D1-  2
00346  RTN
00348  C=C+C   A 				# This would be virtophy
0034A  A=R2
0034D  C=C+A   A
0034F  RTN
00351  C=0     A 				# This is varpd0
00353  C=DAT1  P
00357  C=C+C   A 				# this is cvarpd0
00359  A=R4
0035C  C=C+A   A
0035E  D0=C
00361  RTN
00363  A=R4 					# I think this is it! var0pd0!
00366  D0=A 					# Nothing calls it, so, it's a good candidate
00369  RTN
0036B  C=0     A 				# This is varFpd0
0036D  LC      F
00370  GOTO    00357
00374  C=0     A
00376  LC      10
0037A  GOTO    00357
0037E  C=0     A
00380  LC      11
00384  GOTO    00357
00388  C=0     A
0038A  LC      12
0038E  GOTO    00357			# This is the end of the fixed register stuff
00392  D1=D1+  3 				# This is ALU setup:
00395  C=0     A 				# Clears C
00397  A=R4 					# Sets A to be the start of the data area (v0)
0039A  C=DAT1  P 				# loads the instruction nibble for Y
0039E  C=C+C   A 				# Doubles it becaues it's a byte value and needs to be nibble #
003A0  C=C+A   A 				# Add that to A
003A2  D0=C 					# Sets the poiter to vY
003A5  C=0     A 				# Blow out C
003A7  C=DAT0  B 				# Load a byte from d0 into it
003AA  RSTK=C 					# Push it
003AC  D1=D1-  3 				# Point back at X nibble
003AF  C=0     A 				# Repeat the whole process
003B1  C=DAT1  P
003B5  C=C+C   A
003B7  C=C+A   A
003B9  D0=C
003BC  A=0     A
003BE  A=DAT0  B 				# Save it in A this time
003C1  C=RSTK 					# Pop the vY data from earlier
003C3  ACEX    A 				# Swap C and A so C is vX and A is vY
003C5  RTN
003C7  CSR     A 					# savecarry. 
003C9  CSR     A 					# Shifting C right by whole nibbles twice
003CB  A=0     A 					# Blow out A. # NB: Why is this going from 003CB to F? A=0 should be 2 nibbles
003CF  A=A&C   B 					# This seems ineffective? And A with C? A is 0?
003D3  C=R4 						# Set C to v0 address...
003D6  D0=C 						# Stuff that in d0...
003D9  D0=D0+  15 					# Add 30 to d0, which is going to point us at vF's byte
003DC  D0=D0+  15
003DF  DAT0=A  B 					# Save the value of A in there. How the hell does this even work?

# What byte code is actually here?
# ...F6F6D0E40E6611C...
# F6 = CSR
# F6 = CSR
# D0 = A=0
# E4 = A=A+1 						# <<< Who could have guessed...
# 0E66 = 0Ea6 = A=A&C B
# Yeah OK, so, that's cool, A=A+1 is literally just missing completely here. What kind of dissassembly is this?

003E2  RTNCC 						# Return, clearing carry bit
003E4  C=C+C   A
003E6  A=PC
003EA  A=A+C   A
003EC  LC      00CDF
003F3  C=C+A   A
003F5  D0=C
003F8  C=0     A
003FA  C=DAT0  1
003FE  OUT=C
00401  GOSBVL  01160
00408  A=C     A
0040A  C=0     A
0040C  OUT=C
0040F  D0=D0+  1
00412  C=DAT0  1
00416  C=C&A   A
0041A  RTN
0041C  A=R2 		# Setup Routine for Load/Save commands. Loads physical address into A
0041F  C=R0 		# Loads I into C
00422  C=C+C   A 	# Bytes -> Nibbles
00424  C=C+A   A 	# C contains physical address of I
00426  D1=C 		# Set D1 to physical address of I
00429  A=R4 		# Set A to memory Start area? Turns out, v0-f are at the beginning of memory area
0042C  AD0EX 		# Swap A with D0?
0042F  RTN
00431  A=R4
00434  C=A     A
00436  CD0EX
00439  A=A+14  A
0043F  ?C>=A   A
00442  GOYES   00446
00444  A=C     A
00446  RTN
00448  GOSUB   00333 		# mnode call? calls nnnc
0044C  A=C     A
0044E  C=0     A
00450  LC      E0
00454  ?A#C    A
00457  GOYES   00498
00459  A=R4
0045C  LC      00071
00463  A=A+C   A
00465  LC      40
00469  B=C     A
0046B  D0=A
0046E  C=DAT0  A
00471  D0=C
00474  C=0     W
00477  DAT0=C  W
0047B  D0=D0+  16
0047E  DAT0=C  W
00482  D0=D0+  16
00485  DAT0=C  B
00488  A=A+5   A
0048E  B=B-1   B
00491  ?B#0    B
00494  GOYES   0046B
00496  RTNCC
00498  LC      EE
0049C  ?A#C    A
0049F  GOYES   004D7
004A1  A=R4
004A4  LC      0002C
004AB  C=C+A   A
004AD  D0=C
004B0  A=DAT0  A
004B3  ?A=0    A
004B6  RTNYES
004B8  A=A-4   A
004BE  DAT0=A  A
004C1  C=C+5   A
004C7  C=C+A   A
004C9  D0=C
004CC  C=0     A
004CE  C=DAT0  4
004D2  R3=C
004D5  RTNCC
004D7  LC      FF
004DB  ?A#C    A
004DE  GOYES   004FB
004E0  A=R4    A
004E6  LC      001C5
004ED  C=C+A   A
004EF  D0=C
004F2  LC      F
004F5  DAT0=C  P
004F9  RTNCC
004FB  C=C-1   B
004FE  ?A#C    A
00501  GOYES   0051D
00503  A=R4    A
00509  LC      001C5
00510  C=C+A   A
00512  D0=C
00515  C=0     A
00517  DAT0=C  P
0051B  RTNCC
0051D  C=C-1   B
00520  ?A#C    A
00523  GOYES   00529
00525  GOTO    0067F
00529  C=C-1   B
0052C  ?A#C    A
0052F  GOYES   00579
00531  A=R4
00534  LC      00071
0053B  C=C+A   A
0053D  D0=C
00540  LC      3F
00544  D=C     A
00546  A=0     A
00548  C=DAT0  A
0054B  D0=D0+  5
0054E  D1=C
00551  C=DAT1  W
00555  CSRC
00558  DAT1=C  W
0055C  D1=D1+  16
0055F  C=DAT1  W
00563  D1=D1-  1
00566  DAT1=C  W
0056A  D1=D1+  16
0056D  DAT1=A  P
00571  D=D-1   B
00574  GONC    00548
00577  RTNCC
00579  C=C-1   B
0057C  ?A#C    A
0057F  GOYES   005CC
00581  A=R4
00584  LC      00071
0058B  C=C+A   A
0058D  D0=C
00590  LC      3F
00594  D=C     A
00596  A=0     A
00598  C=DAT0  A
0059B  D0=D0+  5
0059E  D1=C
005A1  D1=D1+  16
005A4  C=DAT1  W
005A8  CSLC
005AB  DAT1=C  W
005AF  D1=D1-  16
005B2  C=DAT1  W
005B6  D1=D1+  1
005B9  DAT1=C  W
005BD  D1=D1-  1
005C0  DAT1=A  P
005C4  D=D-1   B
005C7  GONC    00598
005CA  RTNCC
005CC  C=A     A
005CE  CSR     A
005D0  C=C-12  P
005D6  ?C=0    P
005D9  GOYES   005DF
005DB  GOTO    0066B
005DF  B=0     A
005E1  B=A     P
005E4  ?B=0    A
005E7  RTNYES
005E9  A=R4
005EC  LC      001AC
005F3  A=A+C   A
005F5  D0=A
005F8  LC      3F
005FC  C=C-B   B
005FF  D=C     A
00601  A=B     A
00603  B=B+B   A
00605  B=B+B   A
00607  B=B+A   A
00609  C=DAT0  A
0060C  D1=C
0060F  CD0EX
00612  D0=C
00615  C=C-B   A
00617  CD0EX
0061A  A=DAT0  A
0061D  AD0EX
00620  A=DAT0  W
00624  DAT1=A  W
00628  D0=D0+  16
0062B  D1=D1+  16
0062E  A=DAT0  W
00632  DAT1=A  W
00636  D0=C
00639  D0=D0-  5
0063C  D=D-1   B
0063F  GONC    00609
00642  A=0     W
00645  ?B=0    A
00648  GOYES   00669
0064A  C=DAT0  A
0064D  D0=D0-  5
00650  D1=C
00653  DAT1=A  W
00657  D1=D1+  16
0065A  DAT1=A  W
0065E  B=B-5   A
00664  ?B#0    A
00667  GOYES   0064A
00669  RTNCC
0066B  RTNSC
0066D  GOSUB   0022C
00671  GONC    00697
00674  ?ABIT=0 4
00679  GOYES   0067F
0067B  GOTO    0016B
0067F  INTON 						# This is exit
00683  ST=1    15
00686  GOSBVL  067D2
0068D  A=DAT0  A
00690  D0=D0+  5
00693  PC=(A)
00697  C=R3
0069A  C=C+2   A
006A0  CR3EX
006A3  C=C+C   A
006A5  A=R2
006A8  C=C+A   A
006AA  D1=C
006AD  A=0     A
006AF  D1=D1+  1
006B2  A=DAT1  P
006B6  D1=D1-  1
006B9  A=A+A   A
006BB  A=A+A   A
006BD  B=A     A
006BF  A=PC
006C3  LC      0001A
006CA  C=C+A   A
006CC  RSTK=C
006CE  LC      00021
006D5  C=C+B   A
006D7  C=C+A   A
006D9  PC=C
006DD  GONC    0066D
006E0  GOTO    00724
006E4  GOTO    00448
006E8  GOTO    00738
006EC  GOTO    00741
006F0  GOTO    0078A
006F4  GOTO    007AA
006F8  GOTO    007C0
006FC  GOTO    007D0
00700  GOTO    007DF
00704  GOTO    007F4
00708  GOTO    007C8
0070C  GOTO    008D0
00710  GOTO    008D9
00714  GOTO    008ED
00718  GOTO    00918
0071C  GOTO    00A41
00720  GOTO    00AD5
00724  INTON
00728  ST=1    15
0072B  C=R3
0072E  R0=C
00731  GOVLNG  0357F
00738  GOSUB   00333 			# 1NNN, Jump
0073C  R3=C
0073F  RTNCC
00741  A=R4 G  A
00747  LC      0002C
0074E  C=C+A   A
00750  D0=C
00753  A=DAT0  A
00756  C=C+5   A
0075C  C=C+A   A
0075E  CD0EX
00761  A=R3    A
00767  DAT0=A  4
0076B  CD0EX
0076E  A=DAT0  A
00771  A=A+4   A
00777  LC      00040
0077E  ?C<A    A
00781  RTNYES
00783  DAT0=A  A
00786  GOTO    00738
0078A  GOSUB   00351
0078E  D1=D1+  2
00791  A=DAT1  B
00794  C=DAT0  B
00797  ?C#A    B
0079A  GOYES   007A8
0079C  CR3EX
0079F  C=C+2   A
007A5  CR3EX
007A8  RTNCC
007AA  GOSUB   00351
007AE  D1=D1+  2
007B1  A=DAT1  B
007B4  C=DAT0  B
007B7  ?C=A    B
007BA  GOYES   007A8
007BC  GOTO    0079C
007C0  GOSUB   00392
007C4  GOTO    00797
007C8  GOSUB   00392
007CC  GOTO    007B7
007D0  GOSUB   00351
007D4  D1=D1+  2
007D7  A=DAT1  B
007DA  DAT0=A  B
007DD  RTNCC
007DF  GOSUB   00351
007E3  D1=D1+  2
007E6  A=DAT1  B
007E9  C=DAT0  B
007EC  C=C+A   B
007EF  DAT0=C  B
007F2  RTNCC
007F4  D1=D1+  2
007F7  A=DAT1  1
007FB  D1=D1-  2
007FE  C=0     A
00800  ?C#A    P
00803  GOYES   0080E
00805  GOSUB   00392
00809  DAT0=A  B
0080C  RTNCC
0080E  C=C+1   A
00810  ?C#A    P
00813  GOYES   00823
00815  GOSUB   00392
00819  C=C!A   B
0081D  DAT0=C  2
00821  RTNCC
00823  C=C+1   A
00825  ?C#A    P
00828  GOYES   00838
0082A  GOSUB   00392
0082E  C=C&A   B
00832  DAT0=C  2
00836  RTNCC
00838  C=C+1   A
0083A  ?C#A    P
0083D  GOYES   0085A
0083F  GOSUB   00392
00843  B=A     B
00846  B=B!C   B
0084A  C=C&A   B
0084E  C=-C-D  B
00851  C=C&B   B
00855  DAT0=C  B
00858  RTNCC
0085A  C=C+1   A
0085C  ?C#A    P
0085F  GOYES   0086F
00861  GOSUB   00392
00865  C=C+A   A
00867  DAT0=C  2
0086B  GOTO    003C7
0086F  C=C+1   A
00871  ?C#A    P
00874  GOYES   00889
00876  GOSUB   00392
0087A  A=-A-1  B
0087D  C=C+A   A
0087F  C=C+1   A
00881  DAT0=C  2
00885  GOTO    003C7
00889  C=C+1   A
0088B  ?C#A    P
0088E  GOYES   008A7
00890  GOSUB   00392 		# Shift right
00894  A=C     B
00897  CSRB    B
0089C  DAT0=C  2
008A0  C=A     B
008A3  GOTO    003CB
008A7  C=C+1   A
008A9  ?C#A    P
008AC  GOYES   008B8
008AE  GOSUB   00392
008B2  ACEX    A
008B4  GOTO    0087A
008B8  LC      E
008BB  ?C#A    P
008BE  GOYES   008CE
008C0  GOSUB   00392 		# Shift left
008C4  C=C+C   A
008C6  DAT0=C  2
008CA  GOTO    003C7
008CE  RTNSC
008D0  GOSUB   00333 		# ANNN, Set I
008D4  R0=C
008D7  RTNCC
008D9  GOSUB   00351 		# Jump0, this is calling varpd0 # CAn we rewrite this?
008DD  GOSUB   00333		# nnnc
008E1  A=0     A 			# Set A to 0
008E3  A=DAT0  B 			# Read a byte of data from DAT0, which is the Vn pointer
008E6  C=C+A   A 			# Add this value to C
008E8  R3=C 				# Set r3 to C - R3 is the PC
008EB  RTNCC 				# Returns from the command
008ED  GOSUB   00351
008F1  LC      00104
008F8  CD0EX
008FB  A=DAT0  2
008FF  CD0EX
00902  D1=D1+  2
00905  C=DAT1  B
00908  D1=D1-  2
0090B  C=C&A   B
0090F  DAT0=C  B
00912  RTNCC
00914  GOTO    00B16
00918  A=R4    A
0091E  LC      001C5
00925  C=C+A   A
00927  D0=C
0092A  C=DAT0  P
0092E  ?C=0    P
00931  GOYES   00937
00933  GOTO    009C5
00937  GOSUB   0022C
0093B  GOC     00914
0093E  ?C=0    P
00941  GOYES   00937
00943  GOSUB   00D1B 					# Calls S_Regs
00947  C=R0    A
0094D  GOSUB   00348
00951  R0=C
00954  GOSUB   00392
00958  D=C     A
0095A  LC      1F
0095E  A=A&C   B
00962  LC      3F
00966  D=D&C   B
0096A  D1=D1+  2
0096D  C=0     B
00970  C=DAT1  1
00974  C=C+A   B
00977  B=C     B
0097A  LC      20
0097E  B=B-C   B
00981  GONC    00987
00984  B=0     B
00987  C=0     B
0098A  C=DAT1  1
0098E  C=C-B   B
00991  P=C     0
00995  C=P     15
0099B  C=0     P
009A0  D1=D1-  2
009A3  GOSUB   00E81 					# This must lores draw
009A7  GOSUB   00D50 					# this must be r_rregs
009AB  GOSUBL  0036B 					# This is varfpd0, and it's called after the sprite calls
009B1  C=0     B
009B6  ?C=0    P 						# This is testing if the non byte area of C is 0 I guess
009B9  GOYES   009BE
009BB  C=C+1   B
009BE  DAT0=C  B 						# This is adding 1 to C and saving it into dat0 and thus vf
009C3  RTNCC
009C5  GOSUB   00D1B 					# Calls SRegs
009C9  C=R0
009CC  C=C+C   A
009CE  A=R2
009D1  C=C+A   A
009D3  R0=C
009D6  GOSUB   00392
009DA  D=C     A
009DC  LC      3F
009E0  A=A&C   B
009E4  LC      7F
009E8  D=D&C   B
009EC  D1=D1+  2
009EF  C=0     W
009F2  B=0     W
009F5  C=DAT1  1
009F9  ?C#0    P
009FC  GOYES   00A07
009FE  C=C+16  B
00A04  B=B+1   S
00A07  RSTK=C
00A09  C=C+A   B
00A0C  B=C     B
00A0F  LC      40
00A13  B=B-C   B
00A16  GONC    00A1C
00A19  B=0     B
00A1C  C=RSTK
00A1E  C=C-B   B 					# It is at this point that B ceases to be useful.
00A21  P=C     0
00A25  C=P     15
00A2B  D1=D1-  2
00A2E  GOSUB   00D85 				# This is high res draw
00A32  GOSUB   00D50 				# this must be r_rregs
00A36  GOSUB   0036B 				# This is varfpd0, and it's called after the sprite calls
00A3A  C=B     A 					# This is taking the value that is in B and saving it into C and thus vf
00A3C  DAT0=C  B 					# B not accumlating would fix, but, no access to B for fancying
00A3F  RTNCC 						# There's a return here which is strange a little?
00A41  GOSUB   00351
00A45  C=0     A
00A47  C=DAT0  B
00A4A  GOSUB   003E4
00A4E  D=0     B
00A51  D=C     P
00A54  D1=D1+  2
00A57  A=DAT1  B
00A5A  D1=D1-  2
00A5D  LC      9E
00A61  ?C=A    B
00A64  GOYES   00A71
00A66  LC      A1
00A6A  ?C=A    B
00A6D  GOYES   00A7B
00A6F  RTNSC
00A71  C=D     B
00A74  A=0     B
00A77  GOTO    007B7
00A7B  C=D     B
00A7E  A=0     B
00A81  GOTO    00797
00A85  CD0EX
00A88  RSTK=C
00A8A  D=0     A
00A8C  C=D     A
00A8E  GOSUB   003E4
00A92  ?C#0    P
00A95  GOYES   00AA7
00A97  GOSUBL  0022C
00A9D  GOC     00AD1
00AA0  D=D+1   P
00AA3  GOTO    00A8C
00AA7  GOSUB   0037E
00AAB  LC      04
00AAF  DAT0=C  2
00AB3  GOSUBL  0022C
00AB9  GOC     00AD1
00ABC  C=D     A
00ABE  GOSUB   003E4
00AC2  ?C#0    P
00AC5  GOYES   00AA7
00AC7  C=RSTK
00AC9  D0=C
00ACC  C=D     B
00ACF  RTNCC
00AD1  C=RSTK
00AD3  RTNSC
00AD5  GOSUB   00351
00AD9  D1=D1+  2
00ADC  A=DAT1  B
00ADF  D1=D1-  2
00AE2  LC      07
00AE6  ?C#A    B
00AE9  GOYES   00B01
00AEB  CD0EX
00AEE  RSTK=C
00AF0  GOSUB   00374
00AF4  A=DAT0  B
00AF7  C=RSTK
00AF9  CD0EX
00AFC  DAT0=A  B
00AFF  RTNCC
00B01  LC      0A
00B05  ?C#A    B
00B08  GOYES   00B1E
00B0A  GOSUB   00A85
00B0E  GOC     00B16
00B11  DAT0=C  B
00B14  RTNCC
00B16  C=RSTK
00B18  GOLONG  00675 			# Reference golong
00B1E  LC      15
00B22  ?C#A    B
00B25  GOYES   00B37
00B27  C=DAT0  B
00B2A  RSTK=C
00B2C  GOSUB   00374
00B30  C=RSTK
00B32  DAT0=C  B
00B35  RTNCC
00B37  LC      18
00B3B  ?C#A    B
00B3E  GOYES   00B50
00B40  C=DAT0  B
00B43  RSTK=C
00B45  GOSUB   0037E
00B49  C=RSTK
00B4B  DAT0=C  B
00B4E  RTNCC
00B50  LC      1E
00B54  ?C#A    B
00B57  GOYES   00B6C
00B59  C=0     A
00B5B  C=DAT0  B
00B5E  A=R0
00B61  A=A+C   X
00B64  RTNC
00B67  R0=A
00B6A  RTNCC
00B6C  LC      29
00B70  ?C#A    B
00B73  GOYES   00B8B
00B75  C=0     A
00B77  A=0     A
00B79  A=DAT0  P
00B7D  C=A     P
00B80  C=C+C   A
00B82  C=C+C   A
00B84  C=C+A   A
00B86  R0=C
00B89  RTNCC
00B8B  LC      30
00B8F  ?C#A    B
00B92  GOYES   00BB2
00B94  C=0     A
00B96  A=0     A
00B98  A=DAT0  P
00B9C  C=A     P
00B9F  A=A+A   A
00BA1  A=A+A   A
00BA3  A=A+C   A
00BA5  A=A+A   A
00BA7  LC      50
00BAB  A=A+C   A
00BAD  R0=A
00BB0  RTNCC
00BB2  LC      33
00BB6  ?C=A    B
00BB9  GOYES   00BBF
00BBB  GOTO    00C51
00BBF  C=DAT0  B
00BC2  D=C     B
00BC5  A=PC
00BC9  LC      004E8
00BD0  C=C+A   A
00BD2  D0=C
00BD5  A=0     A
00BD7  ?D=0    B
00BDA  GOYES   00BFE
00BDC  C=D     B
00BDF  ?CBIT=0 0
00BE4  GOYES   00BF0
00BE6  C=DAT0  3
00BEA  SETDEC
00BEC  A=A+C   A
00BEE  SETHEX
00BF0  D0=D0+  3
00BF3  DSRB +  B
00BF8  GOTO    00BD7
00BFC  RTNSC
00BFE  B=A     A
00C00  C=R0 +  A
00C06  LA      00FFD
00C10  ?C>A    A
00C13  RTNYES
00C15  GOSUBL  00348
00C1B  D0=C
00C1E  A=B     A
00C20  C=0     A
00C24  DAT0=A  P
00C28  D0=D0+  1
00C2B  DAT0=C  P
00C2F  D0=D0+  1
00C34  DAT0=A  P
00C38  D0=D0+  1
00C3B  DAT0=C  P
00C3F  D0=D0+  1
00C44  DAT0=A  P
00C48  D0=D0+  1
00C4B  DAT0=C  P
00C4F  RTNCC
00C51  LC      55 				# Stores!
00C55  ?C#A    B 				# Branch if not equal to save command
00C58  GOYES   00C86
00C5A  GOSUBL  0041C 			# Definitely Save/Load FINDME
00C60  C=R0 					# Set C to I
00C63  D=C     A 				# Copy C to D
00C65  C=DAT0  B 				# Move byte from dat0 to C - dat0
00C68  DAT1=C  B 				# Store byte from C to dat1
00C6B  CD0EX 					# Swap?
00C6E  D0=C 					# Move?
00C71  ?C>=A   A 				# Check if C >= A, end function
00C74  GOYES   00C84 			# RTNCC
00C76  D1=D1+  2 				# Step pointer
00C79  D0=D0+  2 				# Step pointer
00C7C  D=D+1   X 				# Increase D rather than C (nb use of x field, first 3 nibbles)
00C7F  GONC    00C65 			# Go if no carry to loop, otherwise return
00C82  RTNSC
00C84  RTNCC
00C86  LC      65 				# Loads!
00C8A  ?C#A    B 
00C8D  GOYES   00CBB
00C8F  GOSUBL  0041C 			# Setup routine
00C95  C=R0 					# Set C to I
00C98  D=C     A 				# Set D to C
00C9A  C=DAT1  B 				# Load @D1 into C
00C9D  DAT0=C  B 				# Save C into @D0
00CA0  CD0EX					# Swap D0/C
00CA3  D0=C 					# Set D0 to C
00CA6  ?C>=A   A 				# Test if we've hit A, which is the end pointer
00CA9  GOYES   00CB9
00CAB  D1=D1+  2				# incriment both pointers
00CAE  D0=D0+  2
00CB1  D=D+1   X				# And incriment D to test for overflows
00CB4  GONC    00C9A 
00CB7  RTNSC
00CB9  RTNCC
00CBB  LC      75
00CBF  ?C#A    B
00CC2  GOYES   00CEA
00CC4  GOSUBL  00431
00CCA  D1=     706D5
00CD1  C=DAT0  B
00CD4  DAT1=C  B
00CD7  CD0EX
00CDA  D0=C
00CDD  D1=D1+  2
00CE0  D0=D0+  2
00CE3  ?C<A    A
00CE6  GOYES   00CD1
00CE8  RTNCC
00CEA  LC      85
00CEE  ?C#A    B
00CF1  GOYES   00D19
00CF3  GOSUBL  00431
00CF9  D1=     706D5
00D00  C=DAT1  B
00D03  DAT0=C  B
00D06  CD0EX
00D09  D0=C
00D0C  D1=D1+  2
00D0F  D0=D0+  2
00D12  ?C<A    A
00D15  GOYES   00D00
00D17  RTNCC
00D19  RTNSC 					# End of instructions
00D1B  A=R4 					# s_rregs
00D1E  LC      001B1
00D25  C=C+A   A
00D27  D0=C
00D2A  A=R0
00D2D  DAT0=A  A
00D30  D0=D0+  5
00D33  A=R1
00D36  DAT0=A  A
00D39  D0=D0+  5
00D3C  A=R2
00D3F  DAT0=A  A
00D42  D0=D0+  5
00D45  A=R3
00D48  DAT0=A  A
00D4B  D0=D0+  5
00D4E  RTN
00D50  A=R4						# r_rregs
00D53  LC      001B1
00D5A  C=C+A   A
00D5C  D0=C
00D5F  A=DAT0  A
00D62  R0=A
00D65  D0=D0+  5
00D68  A=DAT0  A
00D6B  R1=A
00D6E  D0=D0+  5
00D71  A=DAT0  A
00D74  R2=A
00D77  D0=D0+  5
00D7A  A=DAT0  A
00D7D  R3=A
00D80  D0=D0+  5
00D83  RTN
00D85  C=A     A 					# Suspect this is high res drawing
00D87  A=A+A   A
00D89  A=A+A   A
00D8B  C=C+A   A
00D8D  A=R4
00D90  A=A+C   A
00D92  LC      00071
00D99  C=C+A   A
00D9B  D1=C
00D9E  C=D     A
00DA0  CSRB +  A
00DA5  CSRB +  A
00DAA  R2=C
00DAD  LC      03
00DB1  D=D&C   B
00DB5  LC      07
00DB9  ?B=0    S
00DBC  GOYES   00DC4
00DBE  C=C+8   B
00DC4  C=C+D   B
00DC7  R3=C
00DCA  C=R0    A
00DD0  D0=C
00DD3  A=0     A
00DD5  A=DAT0  B
00DD8  ?B=0    S
00DDB  GOYES   00DE7
00DDD  D0=D0+  2
00DE0  ASL     A
00DE2  ASL     A
00DE4  A=DAT0  B
00DE7  CD0EX
00DEA  C=C+2   A
00DF0  R0=C
00DF3  C=R3    A
00DF9  D=0     W
00DFC  D=C     B
00DFF  C=0     A
00E01  C=C+C   A
00E03  ?ABIT=0 0
00E08  GOYES   00E0C
00E0A  C=C+1   A
00E0C  ASRB
00E0F  D=D-1   A
00E11  GONC    00E01
00E14  D=C     A
00E16  C=DAT1  A
00E19  D1=D1+  5
00E1C  A=R2
00E1F  C=C+A   A
00E21  D0=C
00E24  LC      20
00E28  C=C-A   B
00E2B  LA      03
00E32  ?B=0    S
00E35  GOYES   00E3D
00E37  A=A+2   B
00E3D  ?C<A    B
00E40  GOYES   00E45
00E42  C=A     B
00E45  C=C-1   B
00E48  P=C     0
00E4C  C=DAT0  WP
00E50  A=C     WP
00E53  C=C&D  WP 				# This is our conditional check for colliding
00E57  ?C=0    WP
00E5A  GOYES   00E5F 
00E5C  B=B+1   B 				# This is our candidate for not accumulating rows collided b6A at 0x73b
00E5F  CDEX    WP 				# Unfortunately, B doesn't have a lot of access, incing it is basically ideal
00E62  C=C!A  WP
00E66  D=-D-1  WP
00E69  C=C&D  WP
00E6D  DAT0=C  WP
00E73  C=C-1   S
00E76  ?C=0    S
00E79  GOYES   00E7F
00E7B  GOTO    00DCA
00E7F  RTN 						# Well here is a return.
00E81  A=A+A   A 				# Low Res draw:
00E83  C=A     A
00E85  A=A+A   A
00E87  A=A+A   A
00E89  C=C+A   A
00E8B  A=R4    A
00E91  A=A+C   A
00E93  LC      00071
00E9A  C=C+A   A
00E9C  R1=C    A
00EA2  C=D     A
00EA4  CSRB    A
00EA9  CSRB    A
00EAE  CSRB    A
00EB3  C=C+C   A
00EB5  C=C+C   A
00EB7  R2=C    A
00EBD  LC      07
00EC1  D=D&C   B
00EC5  C=C+D   A
00EC7  R3=C    A
00ECD  C=R0    A 				# A goto is aimed here
00ED3  D0=C
00ED6  A=0     A 				# Load byte from dat0
00ED8  A=DAT0  B
00EDB  C=C+2   A 				
00EE1  R0=C    A
00EE7  C=R3    A
00EED  D=0     A
00EEF  D=D+D   W
00EF2  D=D+D   W
00EF5  ?ABIT=0 0
00EFA  GOYES   00F02
00EFC  D=D+3   A
00F02  ASRB    A
00F07  C=C-1   B
00F0A  GONC    00EEF
00F0D  A=R1    A
00F13  D0=A
00F16  C=DAT0  A
00F19  A=A+10  A
00F1F  R1=A 0  A
00F25  A=R2 0  A
00F2B  C=C+A   A
00F2D  D0=C
00F30  LC      20
00F34  C=C-A   B
00F37  LA      08
00F3E  ?C<A    B
00F41  GOYES   00F46
00F43  C=A     B
00F46  C=C-1   B
00F49  P=C     0
00F4D  C=DAT0  WP
00F51  A=C     WP
00F54  C=C&D  WP
00F58  ?C=0    WP
00F5B  GOYES   00F6A 		# this appears to be the test for collision here
00F5D  CPEX    13 			# This is normal chip 8 so we see LC as 1, I suspect that ends up in vf
00F63  LC      1 			# Let's see if we can go up and work out where the hires sprite render mode is
00F66  CPEX    13
00F6A  CDEX    WP
00F6D  C=C!A  WP
00F71  D=-D-1  WP
00F74  C=C&D  WP 			# Graphics zone
00F78  DAT0=C  WP
00F7C  D0=D0+  16
00F7F  D0=D0+  16
00F82  D0=D0+  2
00F85  DAT0=C  WP
00F8B  C=C-1   S
00F8E  ?C=0    S
00F91  GOYES   00F97 		# At the end of the loop
00F93  GOTO    00ECD
00F97  RTN  				# Return 
00F99  B=-B    A 			# 99% sure that beyond this point the decompiler went wrong and this is font data
00F9B  ?D<=C   WP
00F9E  GOYES   01000
00FA2  GOSUB   00EC5
00FA6  GOSBVL  F1F1F
00FAD  ?D<=C   WP
00FB0  GOYES   00FC1
00FB2  A=-A    A
00FB4  BSL     A
00FB6  D=-D-1  A
00FB8  GOSBVL  21FF9
00FBF  GOC     00FB4
00FC2  ?B>=C   W
00FC5  GOYES   00FC4
00FC7  ?B>C    W
00FCA  GOYES   00FC9
00FCC  ?B>=C   W
00FCF  GOYES   00FB8
00FD1  ?B>=C   B
00FD4  GOYES   00FD2
00FD6  ?P#     8
00FD9  GOYES   00FC8
00FDB  ?B>=C   WP
00FDE  GOYES   00FDC
00FE0  GOSBVL  E8FF8
00FE7  ?P#     12
00FEA  GOYES   00FCD
00FEC  $77E3 % Jump out (GOSUB 013D7)
00FF0  D=D+C   A
00FF2  D=D+C   A
00FF4  D=D+C   A
00FF6  D=D+D   A
00FF8  C=A-C   A
00FFA  GOSUB   0083A
00FFE  D0=D0-  4
01001  ST=1    8
01004  D0=D0-  2
01007  A=A-2  WP
0100D  ASRB
01010  LC      6030180C06C37F3
01021  D=-D-1  A
01023  D=-D-1  A
01025  D=D+C   A
01027  D=D+1   A
01029  LC      C7EC3030E0E03
01038  LC      361E0E0
01041  GOTO    00CA8
01045  D=-D-1  A
01047  D=-D-1  A
01049  GOTO    010AA
0104D  D=-D-1  A
0104F  D=-D-1  A
01051  P=P+1
01053  P=P+1
01055  D=D-1   A
01057  D=C-D   A
01059  LC      3
0105C  C=C-1   A
0105E  GOSUB   00E9E
01062  LC      C3C3FEFCC0C07
01071  D=D+1   A
01073  D=D+C   A
01075  D=-D-1  A
01077  D=-D-1  A
01079  LC      6
0107C  P=P+1
0107E  CLRST
01080  R3=A
01083  RSTK=C
01085  RSTK=C
01087  RSTK=C
01089  D=D+C   A
0108B  D=D+1   A
0108D  LC      C7EC3C37E7EC3
0109C  LC      033F7FC3C37E3
010AB  LC      E
010AE  LC      0080040020017
010BD  $6102 % Jump Out (GOTO 012BF)
010C1  LC      4
010C4  $6082 % Jump Out (GOTO 01345)
010C8  A=R4
010CB  ?P#     8
010CE  GOYES   01052
010D2  ST=0    4
010D5  $422 % Jump out (GOC 010F8)
010D8  SR=0
010DD  D0=D0-  2
010E2  DAT1=A  A
010E7  A=R0
010EA  @